-- 💾 Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")
local SoundService = game:GetService("SoundService")
local ProximityPromptService = game:GetService("ProximityPromptService")

local player = Players.LocalPlayer
local camera = workspace.CurrentCamera
local playerGui = player:WaitForChild("PlayerGui")
local character = player.Character or player.CharacterAdded:Wait()
local HRP = character:WaitForChild("HumanoidRootPart")

-- ========================================
-- 🔴 Rake ESP + Health Percentage
-- ========================================
local function createESP(target, name, fillColor)
	if not target:FindFirstChild(name .. "ESP") then
		local highlight = Instance.new("Highlight")
		highlight.Name = name .. "ESP"
		highlight.FillColor = fillColor
		highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
		highlight.FillTransparency = 0.5
		highlight.OutlineTransparency = 0
		highlight.Adornee = target
		highlight.Parent = target
	end
end

local function createHealthBillboard(rake)
	local humanoid = rake:FindFirstChild("NPC")
	local hrp = rake:FindFirstChild("HumanoidRootPart")
	if not humanoid or not hrp or not humanoid:IsA("Humanoid") or hrp:FindFirstChild("HealthDisplay") then return end

	local gui = Instance.new("BillboardGui")
	gui.Name = "HealthDisplay"
	gui.Adornee = hrp
	gui.Size = UDim2.new(0, 150, 0, 50)
	gui.StudsOffset = Vector3.new(0, 3, 0)
	gui.MaxDistance = 75
	gui.AlwaysOnTop = true
	gui.Parent = hrp

	local background = Instance.new("Frame", gui)
	background.Size = UDim2.new(1, 0, 1, 0)
	background.BackgroundColor3 = Color3.new(0, 0, 0)
	background.BackgroundTransparency = 0.5
	background.BorderSizePixel = 0

	local text = Instance.new("TextLabel", background)
	text.Size = UDim2.new(1, 0, 1, 0)
	text.BackgroundTransparency = 1
	text.TextColor3 = Color3.new(1, 1, 1)
	text.Font = Enum.Font.GothamBold
	text.TextSize = 24
	text.Text = "100%"
	text.TextStrokeTransparency = 1

	RunService.RenderStepped:Connect(function()
		if humanoid and gui and gui.Parent then
			local percent = math.clamp(humanoid.Health / humanoid.MaxHealth, 0, 1)
			text.Text = string.format("%.0f%%", percent * 100)
			text.TextColor3 = percent <= 0.2 and Color3.new(1, 0, 0) or Color3.new(1, 1, 1)
		end
	end)
end

local function applyRakeESP()
	local rake = workspace:FindFirstChild("Rake", true)
	if rake then
		createESP(rake, "Rake", Color3.fromRGB(255, 0, 0))
		createHealthBillboard(rake)
	end
end

workspace.ChildAdded:Connect(function(c)
	if c.Name == "Rake" then
		task.wait(0.1)
		applyRakeESP()
	end
end)

applyRakeESP()

-- ========================================
-- 🟡 Scrap ESP + Auto Collect
-- ========================================
local collectDistance = 10

local function handleScrap(scrap)
	if scrap:IsA("PVInstance") and not scrap:FindFirstChild("ScrapESP") then
		local highlight = Instance.new("Highlight")
		highlight.Name = "ScrapESP"
		highlight.FillColor = Color3.fromRGB(255, 255, 0)
		highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
		highlight.FillTransparency = 0.3
		highlight.OutlineTransparency = 0
		highlight.Adornee = scrap
		highlight.Parent = scrap
	end
end

for _, obj in ipairs(workspace:GetDescendants()) do
	if obj.Name == "Scrap" then handleScrap(obj) end
end

workspace.DescendantAdded:Connect(function(desc)
	if desc.Name == "Scrap" then
		task.wait(0.1)
		handleScrap(desc)
	end
end)

ProximityPromptService.PromptShown:Connect(function(prompt)
	if prompt.Parent and prompt.Parent.Name == "Scrap" then
		local pos = prompt.Parent.Position
		if (HRP.Position - pos).Magnitude <= collectDistance then
			task.delay(0.05, function()
				pcall(function()
					prompt:InputHoldBegin()
					task.wait(0.1)
					prompt:InputHoldEnd()
				end)
			end)
		end
	end
end)

-- ========================================
-- 🟢 FlareGun ESP + Notifications
-- ========================================
local flareGunESP = {}

local function notify(msg)
	pcall(function()
		game.StarterGui:SetCore("SendNotification", {
			Title = "FlareGun Update",
			Text = msg,
			Duration = 3
		})
	end)
end

local function applyFlareGunESP(gun)
	if gun:FindFirstChild("FlareGunESP") then return end

	local mainPart = gun:IsA("Model") and (gun.PrimaryPart or gun:FindFirstChildWhichIsA("BasePart")) or gun
	if mainPart then
		local highlight = Instance.new("Highlight")
		highlight.Name = "FlareGunESP"
		highlight.FillColor = Color3.fromRGB(0, 255, 0)
		highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
		highlight.FillTransparency = 0.3
		highlight.OutlineTransparency = 0
		highlight.Adornee = gun
		highlight.Parent = gun
	end
end

local function watchFlareGun(gun)
	if flareGunESP[gun] or gun.Parent.Name ~= "Collectibles" then return end

	flareGunESP[gun] = true
	applyFlareGunESP(gun)
	notify("✅ FlareGun is available in Collectibles!")

	gun.AncestryChanged:Connect(function(_, newParent)
		if not gun:IsDescendantOf(workspace) or (newParent and newParent.Name ~= "Collectibles") then
			if flareGunESP[gun] then
				notify("❌ FlareGun was collected or removed!")
				flareGunESP[gun] = nil
			end
		end
	end)
end

for _, obj in ipairs(workspace:GetDescendants()) do
	if obj.Name == "FlareGun" then
		watchFlareGun(obj)
	end
end

workspace.DescendantAdded:Connect(function(desc)
	if desc.Name == "FlareGun" then
		task.wait(0.1)
		watchFlareGun(desc)
	end
end)

-- ========================================
-- 🔆 Lighting Lock
-- ========================================
local desiredBrightness = 2
local desiredDiffuse = 1
local desiredAtmosphereColor = Color3.fromRGB(107, 107, 107)
local desiredAtmosphereDensity = 0.4

local function lockLighting()
	Lighting.Brightness = desiredBrightness
	Lighting.EnvironmentDiffuseScale = desiredDiffuse

	Lighting:GetPropertyChangedSignal("Brightness"):Connect(function()
		if Lighting.Brightness ~= desiredBrightness then
			Lighting.Brightness = desiredBrightness
		end
	end)

	Lighting:GetPropertyChangedSignal("EnvironmentDiffuseScale"):Connect(function()
		if Lighting.EnvironmentDiffuseScale ~= desiredDiffuse then
			Lighting.EnvironmentDiffuseScale = desiredDiffuse
		end
	end)

	local atmosphere = Lighting:FindFirstChildOfClass("Atmosphere") or Instance.new("Atmosphere", Lighting)
	atmosphere.Color = desiredAtmosphereColor
	atmosphere.Density = desiredAtmosphereDensity

	atmosphere:GetPropertyChangedSignal("Color"):Connect(function()
		if atmosphere.Color ~= desiredAtmosphereColor then
			atmosphere.Color = desiredAtmosphereColor
		end
	end)

	atmosphere:GetPropertyChangedSignal("Density"):Connect(function()
		if atmosphere.Density ~= desiredAtmosphereDensity then
			atmosphere.Density = desiredAtmosphereDensity
		end
	end)
end

lockLighting()

-- ========================================
-- 🔇 Lock Specific Music Volume
-- ========================================
local function lockMusicVolume(sound)
	if sound:IsA("Sound") and sound.Name == "WindOfFjords" then
		sound.Volume = 0
		if not sound:FindFirstChild("__Locked") then
			Instance.new("BoolValue", sound).Name = "__Locked"
			sound.Changed:Connect(function(prop)
				if prop == "Volume" and sound.Volume ~= 0 then
					sound.Volume = 0
				end
			end)
		end
	end
end

for _, obj in ipairs(game:GetDescendants()) do
	if obj:IsA("Sound") and obj.Name == "WindOfFjords" then
		lockMusicVolume(obj)
	end
end

game.DescendantAdded:Connect(function(obj)
	if obj:IsA("Sound") and obj.Name == "WindOfFjords" then
		lockMusicVolume(obj)
	end
end)

-- ========================================
-- 🕒 Clock GUI (MM:SS above inventory)
-- ========================================
local mainGui = playerGui:WaitForChild("MainGui")
local healthBar = mainGui:WaitForChild("HealthBar")

local clockLabel = Instance.new("TextLabel")
clockLabel.Name = "ClockLabel"
clockLabel.AnchorPoint = Vector2.new(0, 1)
clockLabel.Position = UDim2.new(0.46, 0, 1, -90)
clockLabel.Size = UDim2.new(0, 150, 0, 50)
clockLabel.BackgroundTransparency = 0.3
clockLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
clockLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
clockLabel.Font = Enum.Font.GothamBold
clockLabel.TextSize = 32
clockLabel.Text = "00:00"
clockLabel.Visible = healthBar.Visible
clockLabel.Parent = mainGui

local timerValue = workspace:WaitForChild("Info"):WaitForChild("Timer")

local function formatTime(seconds)
	seconds = math.max(0, math.floor(seconds))
	local minutes = math.floor(seconds / 60)
	local secs = seconds % 60
	return string.format("%02d:%02d", minutes, secs)
end

healthBar:GetPropertyChangedSignal("Visible"):Connect(function()
	clockLabel.Visible = healthBar.Visible
end)

RunService.RenderStepped:Connect(function()
	if clockLabel.Visible and timerValue and timerValue:IsA("NumberValue") then
		local time = timerValue.Value
		clockLabel.Text = formatTime(time)
		clockLabel.TextColor3 = time < 10 and Color3.fromRGB(255, 50, 50) or Color3.fromRGB(255, 255, 255)
	end
end)
